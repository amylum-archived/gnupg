name 'gnupg'
org 'amylum'

deps(
  'libgpg-error': {
    version: '1.29-1',
    checksum: '34c4ab5446b371eaacb7dd57b24d823a42436c370ce5886db7a5c468892b0da0'
  },
  libassuan: {
    version: '2.5.1-3',
    checksum: '81b0eeffe6c3422606a72c479392474a9b815558418133c04376c01c1ee6046b'
  },
  libgcrypt: {
    version: '1.8.2-3',
    checksum: '4dc9a09be78b8c6507f770b19cfc032eedeaedc2e29eef526cb583d9174f0cee'
  },
  libksba: {
    version: '1.3.5-13',
    checksum: '8180b7f28c8b4c1e325960bd429ccf5e556161a14ce6b86ad7fc3ff1f58a86e0'
  },
  npth: {
    version: '1.5-1',
    checksum: 'e04522fa0df95f7eef09c8e821d844314abf61b2362f48144fc12c4f3c2e4b8c'
  },
  gnutls: {
    version: '3.5.18-9',
    checksum: '7564de99c0422fb8c784854698b0fe747141293de9f969a94ecaa885ee3acdef'
  },
  gmp: {
    version: '6.1.2-1',
    checksum: '12515de758fa11b2b3d87b347d0593fc8bde37b32a6c609cbddd09473e180b08'
  },
  nettle: {
    version: '3.4-1',
    checksum: 'e960c73d20806156d7dc3fc604af6d031122efe65f9e5155bfafa9280eaf241b'
  },
  libtasn1: {
    version: '4.13-1',
    checksum: 'fd245952c05c8d3b7fd5b56c920c05c91e9e05a5aec9f83eb109d21d15684345'
  },
  'p11-kit': {
    version: '0.23.2-9',
    checksum: '13f3746ef9ede35321b7b1f96726734dd255c65c69dab24b50f90878035ba937'
  },
  zlib: {
    version: '1.2.11-1',
    checksum: '5596e2d39ef98e2323ac415f50afa71a433ed65c23e8d1f2723f711f5ffb4f32'
  },
  sqlite: {
    version: '3.23.1-1',
    checksum: '619cfb8e407c10aa39c1ad3fd3802c9d2e6e5c905ac7a869b045a9fe66e3b0f3'
  },
  libunistring: {
    version: '0.9.9-1',
    checksum: 'd31eb1193caf41d9bd9f27e92ef1ecdddcac0fb6de51ae2eb00b0c1c806cb6f1'
  },
  libidn: {
    version: '1.34-1',
    checksum: 'b3695d64e07ae096087b0cfeeac8e509bbd656fd360790006731de22f55770bd'
  }
)

configure_flags(
  prefix: '/usr',
  sbindir: '/usr/bin',
  libexecdir: '/usr/lib/gnupg',
  'enable-maintainer-mode': nil,
  host: 'x86_64-unknown-linux-gnu',
)

cflags
libs %w(tasn1 hogweed nettle p11-kit z gmp idn unistring)
harden

licenses 'COPYING'

build do
  run 'sed -i "s/beta=yes/beta=no/" autogen.sh'
  run './autogen.sh'
  run 'autoconf'
  configure
  make
  install
end

test do
  run 'gpg --version'
end
